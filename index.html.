<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Image Flagging App</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        #imageContainer {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }
        .imageWrapper {
            position: relative;
            display: inline-block;
        }
        .flagButton {
            position: absolute;
            top: 10px;
            right: 10px;
            padding: 5px;
            background-color: red;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        img {
            width: 150px;
            height: auto;
            display: block;
            border-radius: 8px;
        }
        #flaggedImages {
            display: none;
            margin-top: 20px;
        }
    </style>
</head>
<body>

<h2>Select and Flag Your Images</h2>

<input type="file" id="fileInput" accept="image/*" multiple>
<div id="imageContainer"></div>

<button onclick="showFlaggedImages()">View Flagged Images</button>

<div id="flaggedImages">
    <h3>Flagged Images</h3>
    <div id="flaggedContainer"></div>
</div>

<script>
    const imageContainer = document.getElementById('imageContainer');
    const flaggedContainer = document.getElementById('flaggedContainer');
    const flaggedImages = new Set();

    document.getElementById('fileInput').addEventListener('change', (event) => {
        const files = event.target.files;
        imageContainer.innerHTML = ''; // Clear previous images

        Array.from(files).forEach(file => {
            const reader = new FileReader();
            reader.onload = function (e) {
                const imgWrapper = document.createElement('div');
                imgWrapper.classList.add('imageWrapper');

                const img = document.createElement('img');
                img.src = e.target.result;
                img.alt = file.name;

                const flagButton = document.createElement('button');
                flagButton.innerText = "Flag";
                flagButton.className = "flagButton";

                // Toggle flag state
                flagButton.addEventListener('click', () => {
                    if (flaggedImages.has(img.src)) {
                        flaggedImages.delete(img.src);
                        flagButton.innerText = "Flag";
                        flagButton.style.backgroundColor = "red";
                    } else {
                        flaggedImages.add(img.src);
                        flagButton.innerText = "Unflag";
                        flagButton.style.backgroundColor = "green";
                    }
                });

                imgWrapper.appendChild(img);
                imgWrapper.appendChild(flagButton);
                imageContainer.appendChild(imgWrapper);
            };
            reader.readAsDataURL(file);
        });
    });

    function showFlaggedImages() {
        flaggedContainer.innerHTML = ''; // Clear previous flagged images
        document.getElementById('flaggedImages').style.display = 'block';

        flaggedImages.forEach(src => {
            const img = document.createElement('img');
            img.src = src;
            img.alt = "Flagged Image";
            flaggedContainer.appendChild(img);
        });
    }
</script>

</body>
</html>